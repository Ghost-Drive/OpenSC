{
  "address": "0xCc9FD7911704f608a7b7bFb5f90dcb607df413e6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "input",
          "type": "string"
        }
      ],
      "name": "isAz09Dash",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "regex",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x7a55f1776ab36be27729f6b54fa66e8fb38079b68c7b274bee2a88fbcedcc92a",
  "receipt": {
    "to": null,
    "from": "0x6490C409b50B0dac59619E06B5a4bD14c3E968C3",
    "contractAddress": "0xCc9FD7911704f608a7b7bFb5f90dcb607df413e6",
    "transactionIndex": 0,
    "gasUsed": "44789952",
    "logsBloom": "0xeee31fd7defdde6abe9ddcf4eeef1f356ff9a362a1d3a49e9cf5df5fa59e21bdcefefa5f6dbf7efec7adbca274b1afffcd56fc77eb3fb54afebccc7fadff78657879fbd47bafe7afff3bbf5f7f393fdeb0ffdf5ffecde9baaf3e2bd7bf55c7484fe72e3bc2b8702a66f74a9fffd16dbaede336af54f94fffcd9d34dcf6fd9c7446dcf5cfd9fe4db2d23c7afd07bfaeb3ff15fff9e33fc3f9c69ca77b7fd58e715f37fd5bbb1c07d57227ef636b37ff8ebd6fb77bb697e3fc7af4e2fc9f927afb7f86dd37664edde067ff4db2b98f74f44bde441ffd5cb3fb67efad3f7e4df22aad7ff2e1ffdd4f28fb2446e67f3ad93aed9fadffa79cd9fd3e7f3d1edfdd6591",
    "blockHash": "0xa5fba5df92415a0cdee98d90a0b624f00ec70ca487b2737f8af9d71f5e5ee31c",
    "transactionHash": "0x7a55f1776ab36be27729f6b54fa66e8fb38079b68c7b274bee2a88fbcedcc92a",
    "logs": [],
    "blockNumber": 345629,
    "cumulativeGasUsed": "0",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "5501522db605839705b32f707765afb0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"isAz09Dash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"regex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/az09Dash.sol\":\"az09Dash\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libs/az09Dash.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary az09Dash {\\n  struct State {\\n    bool accepts;\\n    function (bytes1) pure internal returns (State memory) func;\\n  }\\n\\n  string public constant regex = \\\"[a-zA-Z0-9\\\\\\\\-]+\\\";\\n\\n  function s0(bytes1 c) pure internal returns (State memory) {\\n    c = c;\\n    return State(false, s0);\\n  }\\n\\n  function s1(bytes1 c) pure internal returns (State memory) {\\n\\n     uint8 _cint = uint8(c);\\n\\n        if (_cint == 45 || _cint >= 48 && _cint <= 57 || _cint >= 65 && _cint <= 90 || _cint >= 97 && _cint <= 122) {\\n          return State(true, s2);\\n        }\\n\\n    return State(false, s0);\\n  }\\n\\n  function s2(bytes1 c) pure internal returns (State memory) {\\n\\n     uint8 _cint = uint8(c);\\n\\n        if (_cint == 45 || _cint >= 48 && _cint <= 57 || _cint >= 65 && _cint <= 90 || _cint >= 97 && _cint <= 122) {\\n          return State(true, s3);\\n        }\\n\\n    return State(false, s0);\\n  }\\n\\n  function s3(bytes1 c) pure internal returns (State memory) {\\n\\n     uint8 _cint = uint8(c);\\n\\n        if (_cint == 45 || _cint >= 48 && _cint <= 57 || _cint >= 65 && _cint <= 90 || _cint >= 97 && _cint <= 122) {\\n          return State(true, s3);\\n        }\\n\\n    return State(false, s0);\\n  }\\n\\n  function isAz09Dash(string memory input) public pure returns (bool) {\\n    State memory cur = State(false, s1);\\n\\n    for (uint i = 0; i < bytes(input).length; i++) {\\n      bytes1 c = bytes(input)[i];\\n\\n      cur = cur.func(c);\\n    }\\n\\n    return cur.accepts;\\n  }\\n}\\n\",\"keccak256\":\"0x666a2699b58b35cad024e0368805de289665f74ebe767f7041d60cb61974f466\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6103b361003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806355e79d29146100455780637b7acf8914610088575b600080fd5b6100726040518060400160405280600e81526020016d5b612d7a412d5a302d395c2d5d2b60901b81525081565b60405161007f919061020c565b60405180910390f35b61009b610096366004610277565b6100ab565b604051901515815260200161007f565b60408051808201909152600080825261011e602083015290815b83518110156101165760008482815181106100e2576100e2610328565b602001015160f81c60f81b905061010081846020015163ffffffff16565b925050808061010e9061033e565b9150506100c5565b505192915050565b6040805180820190915260008152610202602082015260f882901c602d81148061015b575060308160ff161015801561015b575060398160ff1611155b80610179575060418160ff16101580156101795750605a8160ff1611155b80610197575060618160ff16101580156101975750607a8160ff1611155b156101b9575050604080518082019091526001815261011e6020820152919050565b505060408051808201909152600081526101d66020820152919050565b506040805180820182526000808252610202602092830152825180840190935282526101d69082015290565b61020a610367565b565b600060208083528351808285015260005b818110156102395785810183015185820160400152820161021d565b8181111561024b576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561028957600080fd5b813567ffffffffffffffff808211156102a157600080fd5b818401915084601f8301126102b557600080fd5b8135818111156102c7576102c7610261565b604051601f8201601f19908116603f011681019083821181831017156102ef576102ef610261565b8160405282815287602084870101111561030857600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561036057634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052605160045260246000fdfea2646970667358221220539a817d0047b79fc59e961a84cd8dda9150f6df90e544d9466ab365390ef14964736f6c63430008090033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806355e79d29146100455780637b7acf8914610088575b600080fd5b6100726040518060400160405280600e81526020016d5b612d7a412d5a302d395c2d5d2b60901b81525081565b60405161007f919061020c565b60405180910390f35b61009b610096366004610277565b6100ab565b604051901515815260200161007f565b60408051808201909152600080825261011e602083015290815b83518110156101165760008482815181106100e2576100e2610328565b602001015160f81c60f81b905061010081846020015163ffffffff16565b925050808061010e9061033e565b9150506100c5565b505192915050565b6040805180820190915260008152610202602082015260f882901c602d81148061015b575060308160ff161015801561015b575060398160ff1611155b80610179575060418160ff16101580156101795750605a8160ff1611155b80610197575060618160ff16101580156101975750607a8160ff1611155b156101b9575050604080518082019091526001815261011e6020820152919050565b505060408051808201909152600081526101d66020820152919050565b506040805180820182526000808252610202602092830152825180840190935282526101d69082015290565b61020a610367565b565b600060208083528351808285015260005b818110156102395785810183015185820160400152820161021d565b8181111561024b576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561028957600080fd5b813567ffffffffffffffff808211156102a157600080fd5b818401915084601f8301126102b557600080fd5b8135818111156102c7576102c7610261565b604051601f8201601f19908116603f011681019083821181831017156102ef576102ef610261565b8160405282815287602084870101111561030857600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561036057634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052605160045260246000fdfea2646970667358221220539a817d0047b79fc59e961a84cd8dda9150f6df90e544d9466ab365390ef14964736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}